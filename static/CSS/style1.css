/* Base styles */
body {
    font-family: sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f2f2f2; /* Light gray background */
  }
  
  /* Container styles */
  .container {
    width: 1000px; /* Adjust width as needed */
    margin: 50px auto; /* Center the container horizontally */
    padding: 30px;
    background-color: #333; /* Dark gray background for the container */
    border-radius: 5px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.5); /* Rounded corners */
  }
  
  /* Heading styles */
  h2 {
    text-align: center;
    color: #bb5454; /* White text for heading */
    margin-bottom: 20px;
  }
  
  /* Form styles */
  form {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .btn {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    color: #fff; /* White text for buttons */
    background-color: #1a1a1a; /* Darker gray for buttons */
    transition: background-color 0.2s ease-in-out;
  }
  
  .btn:hover {
    background-color: #000; /* Black on hover for buttons */
  }
  
  /* Input styles */
  input[type="file"] {
    display: none;
  }
  
  label[for="audioInput"] {
    background-color: #1a1a1a; /* Darker gray for file upload label */
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
  }
  
  label[for="audioInput"]:hover {
    background-color: #000; /* Black on hover for file upload label */
  }
  
  
  /* Error message styles (optional) */
  .error-message {
    color: red;
    font-weight: bold;
    margin-top: 10px;
  }

/* Prediction container styles */
.prediction-container {
  margin-top: 30px;
  padding: 15px;
  border-radius: 5px;
  background-color: #262626; /* Medium gray for prediction container */
  color: #fff; /* White text for prediction */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Shadow effect */
  height: 200px; /* Increase height as needed */
  overflow-y: auto;/* White text for prediction */
  position: relative; 
}
.prediction-container::after {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 30px;
    height: 30px;
    border: 5px solid #ccc;
    border-radius: 50%;
    border-top-color: #f00; /* Red for animation color */
    animation: spin 1s linear infinite;
    opacity: 0; /* Initially hide the animation */
  }
  .prediction-container.loading::after {
    opacity: 1;
}
  
  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

/* Prediction styles */
.prediction-text {
  margin: 10px 0; /* Add margin to separate prediction texts */
  font-size: 20px; /* Add margin to separate prediction texts */
}